{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","char","_transformCharacter","getCharacter","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","width","height","version","viewBox","fill","d","attributeName","calcMode","dur","repeatCount","type","values","cx","cy","r","begin","keyTimes","ErrorMessage","style","display","objectFit","margin","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","refsArr","setRefs","ref","push","componentClick","i","forEach","item","classList","remove","add","focus","console","dir","onScrollLoad","document","documentElement","clientHeight","window","pageYOffset","scrollHeight","log","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","renderItems","arr","tabIndex","props","onCharSelected","onKeyPress","e","key","addEventListener","removeEventListener","myRef","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","comicsShort","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b89db50.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                \n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n    _apiBase = `https://gateway.marvel.com:443/v1/public/`;\r\n    _apiKey = `apikey=38c7f5be2aa6b821281191b8859a57ce`;\r\n    _baseOffset=210;\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = async (offset=this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(char => this._transformCharacter(char))\r\n\r\n    }\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id:char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,210)}...` : \"No description available\",\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics:char.comics.items\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        // <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n        //     <g transform=\"translate(80,50)\">\r\n        //     <g transform=\"rotate(0)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        //     <g transform=\"rotate(45)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(50,80)\">\r\n        //     <g transform=\"rotate(90)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        //     <g transform=\"rotate(135)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(20,50.00000000000001)\">\r\n        //     <g transform=\"rotate(180)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        //     <g transform=\"rotate(225)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(49.99999999999999,20)\">\r\n        //     <g transform=\"rotate(270)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        //     <g transform=\"rotate(315)\">\r\n        //     <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n        //     <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        //     <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n        //     </circle>\r\n        //     </g>\r\n        //     </g>\r\n        // </svg>\r\n\r\n        <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"64\"\r\n        height=\"64\"\r\n        version=\"1\"\r\n        viewBox=\"0 0 128 128\"\r\n      >\r\n        <rect width=\"100%\" height=\"100%\" fill=\"#FFF\"></rect>\r\n        <g>\r\n          <path d=\"M71 39.2V.4a63.6 63.6 0 0133.96 14.57L77.68 42.24a25.53 25.53 0 00-6.7-3.03z\"></path>\r\n          <path\r\n            fill=\"#e1e1e1\"\r\n            d=\"M86.486 51.413l27.436-27.435a63.6 63.6 0 0113.71 34.316l-38.572-.007a25.53 25.53 0 00-2.595-6.88zM88.8 71h38.8a63.6 63.6 0 01-14.57 33.96L85.76 77.68a25.53 25.53 0 003.03-6.7zM76.587 86.486l27.435 27.436a63.6 63.6 0 01-34.316 13.71l.007-38.572a25.53 25.53 0 006.88-2.595z\"\r\n          ></path>\r\n          <path\r\n            fill=\"#bebebe\"\r\n            d=\"M57 88.8v38.8a63.6 63.6 0 01-33.96-14.57l27.28-27.27a25.53 25.53 0 006.7 3.03z\"\r\n          ></path>\r\n          <path\r\n            fill=\"#979797\"\r\n            d=\"M41.514 76.587l-27.436 27.435A63.6 63.6 0 01.368 69.706l38.572.007a25.53 25.53 0 002.595 6.88z\"\r\n          ></path>\r\n          <path\r\n            fill=\"#6e6e6e\"\r\n            d=\"M39.2 57H.4a63.6 63.6 0 0114.57-33.96l27.27 27.28a25.53 25.53 0 00-3.03 6.7z\"\r\n          ></path>\r\n          <path\r\n            fill=\"#3c3c3c\"\r\n            d=\"M51.413 41.514L23.978 14.078A63.6 63.6 0 0158.294.368l-.007 38.572a25.53 25.53 0 00-6.88 2.595z\"\r\n          ></path>\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            calcMode=\"discrete\"\r\n            dur=\"720ms\"\r\n            repeatCount=\"indefinite\"\r\n            type=\"rotate\"\r\n            values=\"0 64 64;45 64 64;90 64 64;135 64 64;180 64 64;225 64 64;270 64 64;315 64 64\"\r\n          ></animateTransform>\r\n        </g>\r\n        <g>\r\n          <circle cx=\"63.66\" cy=\"63.16\" r=\"12\"></circle>\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            begin=\"0s\"\r\n            dur=\"720ms\"\r\n            keyTimes=\"0;0.5;1\"\r\n            repeatCount=\"indefinite\"\r\n            values=\"1;0;1\"\r\n          ></animate>\r\n        </g>\r\n      </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","\r\nimport img from './error.gif'\r\n\r\nconst ErrorMessage=()=>{\r\n    return(\r\n        <img \r\n          style={{\r\n            display:'block',\r\n            width:'250px',\r\n            height:'250px',\r\n            objectFit:'contain',\r\n            margin:'0 auto'  }}\r\n          src={img} alt=\"\"/>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from 'react/cjs/react.production.min';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n \n        state={\n        char:{},\n        loading:true,\n        error:false\n        }\n\n    marvelService=new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n        // this.timerId=setInterval(this.updateChar,3000)\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n    }\n    onCharLoaded=(char)=> {\n       this.setState({\n            char,\n            loading:false\n        })\n    }\n\n     onCharLoading=()=> {\n            this.setState({\n            loading:true\n         })\n    }\n\n     onError=()=>{\n            this.setState({\n                error:true,\n                loading:false\n            })\n\n    }\n\n        updateChar=()=>{\n            const id=Math.floor(Math.random()*(1011400-1011000)+1011000);\n            this.onCharLoading();\n            this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded )\n            .catch(this.onError);\n        }\n\n\n\nrender(){\n    const { char,loading,error}=this.state;\n    const errorMessage = error?<ErrorMessage/>:null;\n    const spinner=loading?<Spinner/>:null;\n    const content=!(loading || error) ? <View char={char}/>:null;\n    return (  \n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={this.updateChar}  className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n\n\n    \n}\n\n\n}\nconst View=({char})=>{\n    const { name,description,thumbnail,homepage,wiki} = char;\n    let imgStyle={\"objectFit\":\"cover\"};\n    if(thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') imgStyle={\"objectFit\":\"contain\"};\n     return (\n    <div className=\"randomchar__block\">\n    <img src={thumbnail} style= {imgStyle} alt=\"Random character\" className=\"randomchar__img\"/>\n    <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">  \n           {description}\n        </p>\n        <div className=\"randomchar__btns\">\n            <a href={homepage}  className=\"button button__main\">\n                <div  className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n                <div className=\"inner\">Wiki</div> \n            </a>\n        </div>\n    </div>\n</div>\n  )\n}\n\nexport default RandomChar;","import React,{ Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types'\n\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component  {\n   state = {\n    charList:[],\n    loading:true,\n    error:false,\n    newItemLoading:false,\n    charEnded:false,\n    offset:210\n   }  \n\n   refsArr=[];\n\n   setRefs=(ref)=>{\n    this.refsArr.push(ref)}\n\n\n//    myRef=React.createRef();\n\n\n        componentClick=(i)=>{\n            this.refsArr.forEach(item=>item.classList.remove(\"char__item_selected\"));\n            this.refsArr[i].classList.add(\"char__item_selected\");\n            this.refsArr[i].focus();\n            console.dir(this.refsArr[i]);\n\n            }\n        \n\n   marvelService=new MarvelService();\n   \n   componentDidMount(){\n    const {offset}=this.state;\n    this.onRequest(offset);\n    window.addEventListener('scroll', this.onScrollLoad);\n    \n        //   this.myRef.current.classList.add(\"char__item\");\n        // console.log(this.myShmyRef);          \n \n    }   \n\n    componentWillUnmount(){\n        window.removeEventListener('scroll', this.onScrollLoad)\n    }\n\n    onScrollLoad=()=>\n    {if(document.documentElement.clientHeight+window.pageYOffset>=document.documentElement.scrollHeight){ \n        console.log(this.state.offset); \n         this.onRequest(this.state.offset);  \n  \n        }\n    }\n\n    onRequest=(offset)=>{\n        this.onCharListLoading();\n        this.marvelService\n        .getAllCharacters(offset)\n        .then(this.onCharListLoaded)\n        .catch(this.onError);\n    }\n\n    onCharListLoading=()=>{\n        this.setState({\n            newItemLoading:true\n         })\n    }\n\n    onCharListLoaded=(newCharList)=>{\n        let ended=false;\n        if(newCharList.length<9){\n            ended=true;\n        }\n        this.setState(({charList,offset})=>({\n            charList:[...charList,...newCharList],\n            loading:false,\n            newItemLoading:false,  \n            offset:offset+9,        \n            charEnded:ended\n        }))\n    }\n    onError=()=>{\n        this.setState({\n            error:true,\n            loading:false\n        })}\n\n\n\n\n renderItems=(arr)=>{\n    let items=arr.map((item,i)=>{\n    let imgStyle={\"objectFit\":\"cover\"};\n    if(item.thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') imgStyle={\"objectFit\":\"unset\"};\n            return (\n                <li \n                tabIndex={i}\n                ref={this.setRefs}\n                className=\"char__item\"\n                key={item.id}\n                onClick={()=>{this.props.onCharSelected(item.id);this.componentClick(i);}}\n                onKeyPress={ (e)=>{ \n                    if (e.key===' ' || e.key==='Enter') {this.props.onCharSelected(item.id);\n                    this.componentClick(i);}\n                    }}>               \n\n                <img \n                    src={item.thumbnail}  \n                    alt={item.name}\n                    style={imgStyle}\n                    />\n\n                <div className=\"char__name\">{item.name}</div>\n            </li>\n            )\n    });\n    return (\n        <ul className=\"char__grid\">\n        {items}  \n        </ul>\n    )\n    }\n\n    render() \n    { \n        const {charList,loading,error,offset,newItemLoading,charEnded}=this.state;\n        const items=this.renderItems(charList);\n        const errorMessage = error?<ErrorMessage/>:null;\n        const spinner=loading?<Spinner/>:null;\n        const content=!(loading || error) ? items:null;\n        return (\n            <div  ref={this.myRef}\n            className=\"char__list\">\n         {errorMessage}\n         {spinner}\n         {content}      \n         <button className={charEnded ?\"button button__main button__long \":\"button button__main button__long button__hover\"}\n                 onClick={()=>this.onRequest(offset)} \n                 disabled={newItemLoading}\n                 style={{'cursor': charEnded ? 'unset' : 'pointer'}}\n         >\n                <div className=\"inner\">{charEnded ? 'No more characters' : 'load more'}</div>\n        </button>\n        </div>\n    )}\n    \n   \n}\n\nCharList.propTypes = {\n    onCharSelected:PropTypes.func.isRequired\n}\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\n\n\nclass CharInfo extends Component {\n    state={\n        char:null,\n        loading:false,\n        error:false\n        }\n\n    marvelService=new MarvelService();\n\ncomponentDidMount(){\n    this.updateChar();\n}\n\ncomponentDidUpdate(prevProps){\n    if(this.props.charId !== prevProps.charId)\n    {\n         this.updateChar();\n    }\n   \n}\n\nupdateChar=()=>{\n    const{charId}=this.props;\n    if (!charId) {\n          return;\n    }\n    this.onCharLoading();\n\n    this.marvelService\n    .getCharacter(charId)\n    .then(this.onCharLoaded)   \n    .catch(this.onError );\n}\n\nonCharLoaded=(char)=> {\n    this.setState({\n         char,\n         loading:false\n     })\n }\n\n  onCharLoading=()=> {\n         this.setState({\n         loading:true\n      })\n }\n\n  onError=()=>{\n         this.setState({\n             error:true,\n             loading:false\n         })\n\n }\n\n    render() {\n         const {char,loading,error}=this.state;\n\n         const skeleton=char || loading || error ? null: <Skeleton/>\n         const errorMessage = error?<ErrorMessage/>:null;\n         const spinner=loading?<Spinner/>:null;\n         const content=!(loading || error ||!char) ? <View char={char}/>:null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n\n            </div>\n        )\n    }\n}\n\n\nconst View=({char})=>{\n    \n    const { name,description,thumbnail,homepage,wiki,comics} = char;\n    let imgStyle={\"objectFit\":\"cover\"};\n    if(thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') imgStyle={\"objectFit\":\"contain\"};\n   \n        let comicsShort=[];\n        if(comics.length>=9){ for(let i=0;i<=9;i++){comicsShort[i]=comics[i]}}\n        else{ for(let i=0;i<comics.length;i++){comicsShort[i]=comics[i]}}\n    return(\n    <>\n                    <div className=\"char__basics\">\n                    <img src={thumbnail}  style= {imgStyle}alt=\"abyss\"/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {  comics.length!==0?null:\"There are no comics with this character\"}\n           \n                    {comicsShort.map((item,i)=>{ \n                            if(i>=10) {\n                              return};\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                 {item.name}\n                                 </li>        \n                            )\n                        })\n                    }\n\n                </ul>\n    </>\n    )\n     \n}\n\nCharInfo.propTypes = {\n    charId:PropTypes.number\n}\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state= {\r\n        error:false\r\n    }\r\n    componentDidCatch(error,errorInfo) {\r\n        console.log(error,errorInfo);\r\n        this.setState({\r\n            error:true\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if (this.state.error){\r\n            return <ErrorMessage/>;\r\n        }\r\nreturn this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\nstate={\n    selectedChar:null\n}\nonCharSelected=(id)=>{\n    this.setState({\n     selectedChar:id\n    })    \n}\n\n    render() {return (\n        <div className=\"app\">\n            <AppHeader/>\n            <main>\n                <ErrorBoundary>\n                     <RandomChar/>\n                </ErrorBoundary>\n\n                <div className=\"char__content\">\n                    <ErrorBoundary>\n                         <CharList onCharSelected={this.onCharSelected}/>\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                         <CharInfo charId={this.state.selectedChar}/>\n                    </ErrorBoundary>\n                </div>\n                <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n            </main>\n        </div>\n        )   \n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}